{"version":3,"sources":["constants/index.ts","components/AddFruits.tsx","reducers/FruitsReducer.ts","components/ContextApi/FruitsProvider.tsx","components/FruitsList.tsx","components/FruitsApp.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ADD_FRUIT_ACTION","DELETE_FRUIT_ACTION","FRUITS_LOADED","FRUITS_LOADED_FAILED","FRUIT_SEASON_OPTIONS","value","label","disabled","AddFruits","dispatch","React","fruitName","setFruitName","fruitSeason","setFruitSeason","isModalOpen","setIsModalOpen","error","setError","errorMessage","setErrorMessage","handleModalToggle","modalopen","Button","variant","onClick","Modal","title","ModalVariant","medium","isOpen","onClose","actions","console","log","requestBody","name","season","requestOptions","method","headers","body","JSON","stringify","fetch","process","then","resp","type","payload","cells","fruitname","err","catch","status","errorText","Form","FormGroup","isRequired","fieldId","TextInput","id","placeholder","aria-label","onChange","val","FormSelect","map","option","index","FormSelectOption","isDisabled","FormAlert","Alert","aria-live","isInline","FruitsReducer","state","action","fruitsList","loaded","loadError","length","filter","d","FruitsContext","createContext","FruitsProvider","props","useReducer","getSeasonLabel","find","s","useEffect","a","json","data","ok","rowsData","message","Provider","children","columns","FruitsList","Table","rows","rowWrapper","row","pr","data-label","e","item","deleteFruits","FruitApp","useContext","style","marginTop","App","Header","PageHeader","background","color","logo","logoProps","href","target","Page","header","isManagedSidebar","PageSection","PageSectionVariants","light","TextContent","Text","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7846b131.chunk.js","sourcesContent":["export const ADD_FRUIT_ACTION = 'ADD_FRUIT_ACTION';\nexport const DELETE_FRUIT_ACTION = 'DELETE_FRUIT_ACTION';\nexport const FRUITS_LOADED = 'FRUITS_LOADED';\nexport const FRUITS_LOADED_FAILED = 'FRUITS_LOADED_FAILED';\nexport const FRUIT_SEASON_OPTIONS = [\n  { value: 'please choose', label: 'Please Choose as season', disabled: false },\n  { value: 'spring', label: 'Spring', disabled: false },\n  { value: 'summer', label: 'Summer', disabled: false },\n  { value: 'fall', label: 'Fall', disabled: false },\n  { value: 'winter', label: 'Winter', disabled: false },\n  { value: 'any', label: 'Any', disabled: false }\n];\n","import * as React from 'react';\nimport {\n  Alert,\n  Button,\n  Form,\n  FormAlert,\n  FormGroup,\n  FormSelect,\n  FormSelectOption,\n  Modal,\n  ModalVariant,\n  TextInput\n} from '@patternfly/react-core';\nimport {dispatchProps} from './ContextApi/FruitsProvider';\nimport {ADD_FRUIT_ACTION, FRUIT_SEASON_OPTIONS} from '../constants';\n\nconst AddFruits: React.FC<{ dispatch: dispatchProps }> = ({dispatch}) => {\n  const [fruitName, setFruitName] = React.useState<string>('');\n  const [fruitSeason, setFruitSeason] = React.useState<string>('');\n  const [isModalOpen, setIsModalOpen] = React.useState<boolean>();\n  const [error, setError] = React.useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = React.useState<string>('You must fill out all required fields before you can proceed.');\n\n  const handleModalToggle = () => {\n    setError(false);\n    setFruitName('');\n    setFruitSeason('');\n    setIsModalOpen((modalopen) => !modalopen)\n  }\n\n  const handleModalSubmit = () => {\n    console.log(fruitName, fruitSeason);\n    const requestBody = {\n      name: fruitName,\n      season: fruitSeason\n    }\n    if (fruitName && fruitSeason) {\n      const requestOptions = {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(requestBody)\n      };\n      fetch(`${process.env.REACT_APP_API_URL}/fruit`, requestOptions)\n      .then((resp) => {\n        console.log(resp);\n        dispatch({\n          type: ADD_FRUIT_ACTION,\n          payload: {\n            cells: [\n              {title: fruitName},\n              {title: fruitSeason},\n              {title: \"delete\", fruitname: fruitSeason}\n            ]\n          }\n        });\n        setError((err) => !err);\n        setIsModalOpen((modalopen) => !modalopen);\n        setFruitName('');\n        setFruitSeason('');\n\n      })\n      .catch((err) => {\n        console.log(err);\n        setError((err) => !err);\n        setErrorMessage(`${err.status} - ${err.errorText}`)\n      })\n    } else {\n      setError((err) => !err);\n    }\n  }\n\n  return (\n      <>\n        <Button variant=\"primary\" onClick={handleModalToggle}>\n          Add Fruits\n        </Button>\n        <Modal\n            title=\"Add Fruits\"\n            variant={ModalVariant.medium}\n            isOpen={isModalOpen}\n            onClose={handleModalToggle}\n            actions={[\n              <Button key=\"confirm\" variant=\"primary\"\n                      onClick={handleModalSubmit}>\n                Confirm\n              </Button>,\n              <Button key=\"cancel\" variant=\"link\" onClick={handleModalToggle}>\n                Cancel\n              </Button>\n            ]}\n        >\n          <Form>\n            <FormGroup label=\"Name\" isRequired fieldId=\"simple-form-fruit\">\n              <TextInput\n                  isRequired\n                  id=\"simple-form-fruit\"\n                  type=\"text\"\n                  placeholder=\"Enter Fruit Name\"\n                  name=\"simple-form-fruit\"\n                  value={fruitName}\n                  aria-label=\"Fruit Name\"\n                  onChange={(val) => setFruitName(val)}\n              />\n            </FormGroup>\n            <FormGroup label=\"Season\" isRequired fieldId=\"simple-form-season\">\n              <FormSelect isRequired\n                          id=\"simple-form-season\"\n                          placeholder=\"Enter Fruit Season\"\n                          name=\"simple-form-season\"\n                          value={fruitSeason}\n                          aria-label=\"Fruit Season\"\n                          onChange={(val) => val !== \"please choose\" ? setFruitSeason(val) : setError((err) => !err)}>\n                {FRUIT_SEASON_OPTIONS.map((option, index) => (\n                    <FormSelectOption isDisabled={option.disabled} key={index}\n                                      value={option.value}\n                                      label={option.label}/>\n                ))}\n              </FormSelect>\n            </FormGroup>\n            {error && (\n                <FormAlert>\n                  <Alert variant=\"danger\"\n                         title={errorMessage}\n                         aria-live=\"polite\"\n                         isInline/>\n                </FormAlert>\n            )}\n          </Form>\n        </Modal>\n      </>\n  )\n}\n\nexport default AddFruits;\n","import {\n  ADD_FRUIT_ACTION,\n  DELETE_FRUIT_ACTION,\n  FRUITS_LOADED,\n  FRUITS_LOADED_FAILED\n} from \"../constants\";\n\ntype ActionProps = {\n    type: string,\n    payload: any\n}\n\ntype StateProps = {\n    fruitsList: any[];\n    loaded: boolean;\n    loadError?: string;\n}\n\nconst FruitsReducer = (state: StateProps, action: ActionProps) => {\n\n    switch(action.type) {\n        case FRUITS_LOADED:\n            return {fruitsList: [...state.fruitsList, ...action.payload], loaded: true};\n        case FRUITS_LOADED_FAILED:\n            return {fruitsList: [...state.fruitsList], loaded: true, loadError: action.payload.loadError};\n        case ADD_FRUIT_ACTION:\n            return {fruitsList: [...state.fruitsList, action.payload], loaded: true};\n        case DELETE_FRUIT_ACTION:\n            return {fruitsList : state.fruitsList.length ? state.fruitsList.filter((d) => d.cells?.[0]?.title !== action.payload.name) : [], loaded: true}\n        default:\n            return state;\n    }\n}\n\nexport default FruitsReducer;","import React from 'react';\nimport {\n  FRUIT_SEASON_OPTIONS,\n  FRUITS_LOADED,\n  FRUITS_LOADED_FAILED\n} from '../../constants';\nimport FruitsReducer from '../../reducers/FruitsReducer';\n\nexport type dispatchProps = ({ type, payload }: { type: string, payload: any }) => void\n\ntype FruitsContextProps = {\n  state: { fruitsList: any[], loaded: boolean, loadError?: string };\n  dispatch: dispatchProps;\n}\n\nexport const FruitsContext = React.createContext({} as FruitsContextProps);\n\nconst FruitsProvider: React.FC = (props) => {\n  const [state, dispatch] = React.useReducer(FruitsReducer, { fruitsList: [], loaded: false });\n\n  const getSeasonLabel = (val: string) => {\n    const season = FRUIT_SEASON_OPTIONS.find(s => s.value === val)\n    //console.log(\"LABEL %s\", season?.label);\n    return season?.label\n  }\n  React.useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}/fruits`)\n      .then(async (resp) => {\n        const data = await resp.json()\n        if (resp.ok) {\n          //console.log(\"Fruits Data %s\", JSON.stringify(data));\n          const rowsData = data.map((d: any) => {\n            return {\n              cells: [\n                { title: d.name },\n                { title: getSeasonLabel(d.season) },\n                { title: \"delete\", fruitname: d.name }\n              ]\n            }\n          });\n          dispatch({\n            type: FRUITS_LOADED,\n            payload: rowsData\n          })\n        } else {\n          //console.log(\"Error %s\", JSON.stringify(data));\n          const payload: any = {};\n          if (data.status === 500) {\n            payload.loaded = true;\n            payload.loadError = \"Some Error occurred fetching the fruits\";\n          } else {\n            payload.loaded = true;\n            payload.loadError = `Error Code:${data.status}, Error: ${data.message}`;\n          }\n          dispatch({\n            type: FRUITS_LOADED_FAILED,\n            payload\n          })\n        }\n      })\n      .catch((err) => {\n        console.log('Error Retrieving Fruits: %s', err);\n      })\n    // eslint-disable-next-line\n  }, [])\n\n  const value = { state, dispatch }\n\n  return (\n    <FruitsContext.Provider value={value}>\n      {props.children}\n    </FruitsContext.Provider>\n  )\n}\n\nexport default FruitsProvider;\n","import * as React from 'react';\nimport {Table, TableBody, TableHeader} from '@patternfly/react-table';\nimport {dispatchProps} from './ContextApi/FruitsProvider';\nimport {DELETE_FRUIT_ACTION} from '../constants';\n\nconst columns = [\n  {title: \"Name\"},\n  {title: \"Season\"},\n  {title: \"Action\"}\n];\n\ntype FruitsListProps = {\n  fruitsList: any[],\n  loaded: boolean,\n  dispatch: dispatchProps\n}\n\nconst FruitsList: React.FC<FruitsListProps> = ({\n                                                 loaded,\n                                                 fruitsList,\n                                                 dispatch\n                                               }) => {\n  const deleteFruits = (e: React.SyntheticEvent, item: any) => {\n    console.log(e, item);\n    if (item.fruitname) {\n      const requestOptions = {\n        method: 'DELETE'\n      };\n      fetch(`${process.env.REACT_APP_API_URL}/fruit/${item.fruitname}`, requestOptions)\n      .then((resp) => {\n        console.log(resp);\n        dispatch({\n          type: DELETE_FRUIT_ACTION,\n          payload: {name: item.fruitname}\n        })\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n    }\n  }\n\n  const rowWrapperFunc = (props: any) => {\n    return (<tr>\n      {props.row.cells.map((pr: any, index: number) => {\n        return <td data-label={columns[index].title}\n                   key={pr.title}>{pr.title === 'delete' ? <button\n            onClick={(e: React.SyntheticEvent) => deleteFruits(e, pr)}>Delete</button> : pr.title}</td>\n      })}\n    </tr>)\n  }\n  return (\n      <>\n        {loaded ?\n            (<>\n              <Table\n                  aria-label=\"Automated pagination table\"\n                  cells={columns}\n                  rows={fruitsList}\n                  rowWrapper={rowWrapperFunc}\n              >\n                <TableHeader/>\n                <TableBody/>\n              </Table>\n            </>) : (<h1>Loading....</h1>)}\n      </>\n  );\n}\n\nexport default FruitsList;\n","import {Alert} from '@patternfly/react-core';\nimport React from 'react';\nimport AddFruits from './AddFruits';\nimport {FruitsContext} from './ContextApi/FruitsProvider';\nimport FruitsList from './FruitsList';\n\nimport './fruitsapp.css';\n\nconst FruitApp: React.FC = () => {\n  const { state: { fruitsList, loaded, loadError }, dispatch } = React.useContext(FruitsContext);\n\n  return !loadError ?\n    loaded ? (\n      <>\n        <AddFruits dispatch={dispatch} />\n        <FruitsList loaded={loaded} fruitsList={fruitsList} dispatch={dispatch} />\n      </>\n    ) : (<h1>Loading....</h1>)\n    : <Alert style={{ marginTop: 0 }} variant=\"danger\" isInline title={loadError} />\n\n\n}\n\nexport default FruitApp;\n","import React from 'react';\nimport {\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent\n} from '@patternfly/react-core';\nimport FruitApp from './components/FruitsApp';\nimport FruitsProvider from './components/ContextApi/FruitsProvider';\n\nfunction App() {\n  const logoProps = {\n    href: 'https://github.com/kameshsampath/rosa-fruits-app',\n    title: 'Quarkus::Fruits API',\n    target: '_blank'\n  };\n  const Header = (\n    <PageHeader style={{ background: '#000', color: '#fff' }} logo={<h1>Fruits App</h1>} logoProps={logoProps}> Fruits App </PageHeader>\n  );\n  return (\n    <>\n      <Page\n        header={Header}\n        isManagedSidebar\n      >\n        <PageSection variant={PageSectionVariants.light}>\n          <TextContent>\n            <Text component=\"h1\">Show Fruits</Text>\n            <Text component=\"p\">\n              List the Fruits and season they are available in, can Add or remove fruits as well.\n              </Text>\n            <FruitsProvider >\n              <FruitApp />\n            </FruitsProvider>\n          </TextContent>\n        </PageSection>\n      </Page>\n    </>\n  );\n}\n\nexport default App;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nimport './fonts.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}